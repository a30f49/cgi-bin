#!/usr/bin/perl
BEGIN {
    my $cwd = $0;
    $cwd =~ s/\/[\w-]+$//;
    push( @INC, "$cwd/lib");
}
use strict;
use warnings;
use JSON;
use File::Spec;

use Path;

use File::Reader;

use Plugin::ActivityGenerator;

my $test;
my $json_in;
my $param_mod;
my $param_frag;
my $param_title;

my $ARGC = @ARGV;
if($ARGC==0){
    usage();
    exit(0);
}

while (@ARGV) {
    local $_ = shift @ARGV;
    if ($_ eq '-h' || $_ eq '--help') {
        usage();
        exit(0);
    }elsif($_ eq '--test'){
        $test = 1;
    }elsif($_ eq '--json'){
        $json_in = shift;
        if(!$json_in){
            usage();
            exit(0);
        }
    }elsif($_ eq '-m'){
         $param_mod = shift;
         if(!$param_mod){
             usage();
             exit(0);
         }
    }elsif($_ eq '-f'){
          $param_frag = shift;
          if(!$param_frag){
              usage();
              exit(0);
          }
     }elsif($_ eq '-t'){
        $param_title = shift;
        if(!$param_title){
            usage();
            exit(0);
        }
   }elsif (/^-./) {
        print STDERR "Unknown option: $_\n";
        usage();
        exit(0);
    }
}

sub usage{
    print "Usage:\n";
    print "  gen-act --test --json <json-file>\n";
    print "          -m <module> -f <fragment> -t <title>\n";
    print "     option: --test     #gen activity for test\n";
    print "             --json     #gen activities from json file\n";
    print "             -m         #input module\n";
    print "             -f         #input fragment with package\n";
    print "             -t         #input activity title\n";
}

if($test){
    &gen_test;
}else{
    #print "(param_mod,param_frag,param_title)=>($param_mod,$param_frag,$param_title)\n";
    &gen_act;
}

sub gen_act{
    my $act = new ActivityGenerator($param_mod);
    if( $act->gen_act_with_fragment($param_frag, $param_title)){
        print "Done...$param_frag\n";
    }else{
        print "Pass...$param_frag\n";
    }
}

sub gen_test{
    #my $json_path = File::Spec->rel2abs($json_in);
    my $json_data = new Reader($json_in)->data;

    my $PARAM = decode_json($json_data);
    my $module = $PARAM->{module};
    my $pack   = $PARAM->{'package'};
    #print "(module,pack)->($module,$pack)\n";

    my $act = new ActivityGenerator($module);
    $act->target_package($pack);


    ## for each fragment
    my @fragments = @{$PARAM->{fragments}};

    foreach(@fragments){
        my $frag = $_;

        my $type = ref $frag;
        if($type eq 'HASH'){
            my $f = $frag->{fragment};
            my $t = $frag->{title};
            if( $act->gen_test_with_fragment($f, $t) ){
                print "Done...$f\n";
            }else{
                print "Pass...$f\n";
            }
        }else{
            if($act->gen_test_with_fragment($frag)){
                print "Done...$frag\n";
            }else{
                print "Pass...$frag\n";
            }
        }
    }
}