#!/usr/bin/perl
BEGIN {
    my $cwd = $0;
    $cwd =~ s/\/[\w-]+$//;
    push( @INC, "$cwd/lib");
}
use strict;
use warnings;

use Path;
use File::Reader;
use File::Writer;
use JSON;

use Android::Gradle;
use Android::Module;

my $ARGC = @ARGV;
if($ARGC==0){
    usage();
    exit(0);
}

my $json_hash={
};

while (@ARGV) {
    local $_ = shift @ARGV;
    if ($_ eq '-h' || $_ eq '--help') {
        usage();
        exit(0);

    }elsif($_ eq '-m'){
        my $module_name = shift;

        $json_hash->{module} = $module_name;

    }elsif($_ eq '-p'){
         my $package_name = shift;

         $json_hash->{'package'} = $package_name;

    }elsif($_ eq '-f'){
          my $list_file = shift;

          my $reader = new Reader($list_file);
          my @lines = $reader->list;

          my @newlist;
          foreach(@lines){
            my $l = $_;
            $l =~ s/\.java$//;

            my $h = {fragment=>undef,title=>undef};
            $h->{fragment} = $l;

            push(@newlist,$h);
          }

          $json_hash->{fragments} = \@newlist;

    }elsif (/^-./) {
        print STDERR "Unknown option: $_\n";
        usage();
        exit(0);
    }
}

sub usage{
    print "Usage:\n";
    print "  gen-json -m <module> -p <package> -f <list-file>\n";
    print "    options: -m <module>      #specific the target module name\n";
    print "             -p <package>     #specific the target package\n";
    print "             -f <list-file>   #specific the fragment list files\n";
}

my $json_data = JSON->new->encode($json_hash);
print $json_data;
